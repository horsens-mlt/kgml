########################## XGBoost ##########################
from xgboost import XGBClassifier
from sklearn.metrics import accuracy_score
from sklearn.metrics import confusion_matrix


########## Model definition ##########
model_smo = XGBClassifier()
model_smo.fit(x_train_smo, y_train_smo, verbose=False)

model_ada = XGBClassifier()
model_ada.fit(x_train_ada, y_train_ada, verbose=False)

model_us = XGBClassifier()
model_us.fit(x_train_us, y_train_us, verbose=False)

########## Model prediction ##########
pred_smo=model_smo.predict(x_test)
print('Accuracy of XGBoost classifier - SMO on test set: {:.3f}'.format(accuracy_score(y_test, pred_smo)))

pred_ada=model_ada.predict(x_test)
print('Accuracy of XGBoost classifier - ADA on test set: {:.3f}'.format(accuracy_score(y_test, pred_ada)))

pred_us=model_us.predict(x_test_us)
print('Accuracy of XGBoost classifier - US on test set: {:.3f}'.format(accuracy_score(y_test_us, pred_us)))

##### Confusion matrix #####
print('Confusion matrix - XGBoost with Smote:')
print(confusion_matrix(y_test,pred_smo))

print('\n','Confusion matrix - XGBoost with Adasyn:')
print(confusion_matrix(y_test,pred_ada))

print('\n','Confusion matrix - XGBoost with UnderSampling:')
print(confusion_matrix(y_test_us,pred_us))

########################## Logistic Regression ##########################
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
from sklearn.metrics import confusion_matrix


########## Model definition ##########
log_smo = LogisticRegression()
log_smo.fit(x_train_smo, y_train_smo)
   
log_ada = LogisticRegression()
log_ada.fit(x_train_ada, y_train_ada)

log_us = LogisticRegression()
log_us.fit(x_train_us, y_train_us) 


########## Model prediction ##########
y_pred_smo = log_smo.predict(x_test)
print('Accuracy of logistic regression classifier - SMO on test set: {:.3f}'.format(accuracy_score(y_test, y_pred_smo)))

y_pred_ada = log_ada.predict(x_test)
print('Accuracy of logistic regression classifier - ADA on test set: {:.3f}'.format(accuracy_score(y_test, y_pred_ada)))

y_pred_us = log_us.predict(x_test_us)
print('Accuracy of logistic regression classifier - US on test set: {:.3f}'.format(accuracy_score(y_test_us, y_pred_us)))


##### Confusion matrix #####
print('Confusion matrix - Logistic Regression with Smote:')
print(confusion_matrix(y_test, y_pred_smo))

print('\n','Confusion matrix - Logistic Regression with Adasyn:')
print(confusion_matrix(y_test, y_pred_ada))

print('\n','Confusion matrix - Logistic Regression with UnderSampling:')
print(confusion_matrix(y_test_us, y_pred_us))


########################## Support Vector Machines ##########################
from sklearn import svm
from sklearn.metrics import accuracy_score
from sklearn.metrics import confusion_matrix


########## Model definition ##########
svc_smo = svm.SVC(gamma='scale')
svc_smo.fit(x_train_smo, y_train_smo)

svc_ada = svm.SVC(gamma='scale')
svc_ada.fit(x_train_ada, y_train_ada)

svc_us = svm.SVC(gamma='scale')
svc_us.fit(x_train_us, y_train_us)


########## Model prediction ##########
svc_pred_smo = svc_smo.predict(x_test)
print('Accuracy of SVM classifier - SMO on test set: {:.3f}'.format(accuracy_score(y_test, svc_pred_smo)))

svc_pred_ada = svc_ada.predict(x_test)
print('Accuracy of SVM classifier - ADA on test set: {:.3f}'.format(accuracy_score(y_test, svc_pred_ada)))

svc_pred_us = svc_us.predict(x_test_us)
print('Accuracy of SVM classifier - US on test set: {:.3f}'.format(accuracy_score(y_test_us, svc_pred_us)))


##### Confusion matrix #####
print('Confusion matrix - Support Vector Machine with Smote:')
print(confusion_matrix(y_test, svc_pred_smo))

print('\n','Confusion matrix - Support Vector Machine with Adasyn:')
print(confusion_matrix(y_test, svc_pred_ada))

print('\n','Confusion matrix - Support Vector Machine with UnderSampling:')
print(confusion_matrix(y_test_us, svc_pred_us))
